git pull
install.packages("usethis")
usethis::create_github_token()
install.packages("gitcreds")
gitcreds::gitcreds_set()
title: "Julia Candee"
install.packages(c("bslib", "checkmate", "cpp11", "e1071", "geos", "gert", "haven", "htmlwidgets", "jsonlite", "later", "libgeos", "progress", "sass", "scales", "units", "vctrs", "vroom", "wk", "xml2"))
c(
"https://bcdanl.github.io/data/DOHMH_NYC_Restaurant_Inspection.csv",
"https://bcdanl.github.io/data/spotify_all.csv",
"https://bcdanl.github.io/data/beer_markets.csv"
)
restaurant_inspection_df <- read.csv(urls[1])
urls <- c(
"https://bcdanl.github.io/data/DOHMH_NYC_Restaurant_Inspection.csv",
"https://bcdanl.github.io/data/spotify_all.csv",
"https://bcdanl.github.io/data/beer_markets.csv"
)
restaurant_inspection_df <- read.csv(urls[1])
spotify_df <- read.csv(urls[2])
beer_markets_df <- read.csv(urls[3])
View(beer_markets_df)
View(beer_markets_df)
View(beer_markets_df)
View(beer_markets_df)
View(spotify_df)
View(beer_markets_df)
load("C:/Users/Julia/Documents/JuliaCandee.github.io/posts/Restaurant data.RData")
urls <- c(
"https://bcdanl.github.io/data/DOHMH_NYC_Restaurant_Inspection.csv",
# Load CSV files into data frames
restaurant_inspection_df <- read.csv(urls[1])
quarto render
quarto render
library(tidyverse)
library(hrbrthemes)
library(skimr)
day_wise <- read_csv('https://jem10126.github.io/day_wise.csv')
nvars <- format(round(ncol(day_wise), 0),
nsmall=0,
big.mark=",")
nobs <- format(round(nrow(day_wise), 0),
nsmall=0,
big.mark=",")
View(day_wise)
ob_sum1 <- day_wise %>%
group_by(deaths, recovery) %>%
summarise(deaths_tot = sum(deaths, na.rm = T),
recovered_mean = round(mean(recovered, na.rm = T), 2))
ob_sum1 <- day_wise %>%
group_by(deaths, recovery) %>%
summarise(deaths_tot = sum(deaths, na.rm = T),
recovered_mean = round(mean(recovered, na.rm = T), 2))
ob_sum1 <- day_wise %>%
group_by(deaths, Recovered) %>%
summarise(deaths_tot = sum(deaths, na.rm = T),
recovered_mean = round(mean(Recovered, na.rm = T), 2))
ob_sum1 <- day_wise %>%
group_by(Deaths, Recovered) %>%
summarise(Deaths_tot = sum(deaths, na.rm = T),
recovered_mean = round(mean(Recovered, na.rm = T), 2))
ob_sum1 <- day_wise %>%
group_by(Deaths, Recovered) %>%
summarise(Deaths_tot = sum(Deaths, na.rm = T),
recovered_mean = round(mean(Recovered, na.rm = T), 2))
ob_sum1 <- day_wise %>%
group_by(Deaths) %>%
summarise(Deaths_tot = sum(Deaths, na.rm = TRUE),
recovered_mean = round(mean(Recovered, na.rm = TRUE), 2),
.groups = "drop")
ob_sum1 <- day_wise %>%
group_by(Deaths) %>%
summarise(Deaths_tot = sum(Deaths, na.rm = TRUE),
recovered_mean = round(mean(Recovered, na.rm = TRUE), 2),
.groups = "drop")
day_wise %>%
ggplot(aes(x = log(Deaths),
y = log(Recovered))) +
geom_point(alpha = .1, color = 'purple') +
geom_smooth(method = lm, se = F) +
theme_bw() +
theme(legend.position = 'top')
ob_sum1 <- day_wise %>%
group_by(Deaths) %>%
summarise(Deaths_tot = sum(Deaths, na.rm = TRUE),
recovered_mean = round(mean(Recovered, na.rm = TRUE), 2),
.groups = "drop")
ob_sum1 <- day_wise %>%
group_by(Deaths) %>%
summarise(Deaths_tot = sum(Deaths, na.rm = TRUE),
recovered_mean = round(mean(Recovered, na.rm = TRUE), 2),
.groups = "drop")
#| results: asis
#| echo: false
rmarkdown::paged_table(day_wise)
